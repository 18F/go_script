#! /usr/bin/env ruby
# Author: Mike Bland <michael.bland@gsa.gov>

require_relative '../lib/go_script'

puts <<END_OF_TEMPLATE
#! /usr/bin/env ruby

require 'English'

Dir.chdir File.dirname(__FILE__)

def try_command_and_restart(command)
  exit $CHILD_STATUS.exitstatus unless system command
  exec $PROGRAM_NAME, *ARGV
end

begin
  require 'bundler/setup' if File.exist? 'Gemfile'
rescue LoadError
  try_command_and_restart 'gem install bundler'
rescue SystemExit
  try_command_and_restart 'bundle install'
end

begin
  require 'go_script'
rescue LoadError
  try_command_and_restart 'gem install go_script'
end

extend GoScript
check_ruby_version '#{RUBY_VERSION}'

dev_commands = GoScript::CommandGroup.add_group 'Development commands'

def_command :init, dev_commands, 'Set up the development environment' do
end

def_command :update_gems, dev_commands, 'Update Ruby gems' do |gems|
  update_gems gems
end

def_command :update_js, dev_commands, 'Update JavaScript components' do
  update_node_modules
end

def_command :test, dev_commands, 'Execute automated tests' do |args|
  exec_cmd "bundle exec rake test \#{args.join ' '}"
end

def_command :lint, dev_commands, 'Run style-checking tools' do |files|
  files = files.group_by { |f| File.extname f }
  lint_ruby files['.rb']
  lint_javascript BASEDIR, files['.js']
end

execute_command ARGV
END_OF_TEMPLATE
